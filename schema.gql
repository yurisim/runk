# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Answer {
  _count: AnswerCount!
  id: ID!
  question: Question!
  questionId: String!
  responses: [Response!]
  value: String!
}

type AnswerCount {
  responses: Int!
}

input AnswerCreateManyQuestionInput {
  id: String
  value: String!
}

input AnswerCreateManyQuestionInputEnvelope {
  data: [AnswerCreateManyQuestionInput!]!
  skipDuplicates: Boolean
}

input AnswerCreateNestedManyWithoutQuestionInput {
  connect: [AnswerWhereUniqueInput!]
  connectOrCreate: [AnswerCreateOrConnectWithoutQuestionInput!]
  create: [AnswerCreateWithoutQuestionInput!]
  createMany: AnswerCreateManyQuestionInputEnvelope
}

input AnswerCreateNestedManyWithoutResponsesInput {
  connect: [AnswerWhereUniqueInput!]
  connectOrCreate: [AnswerCreateOrConnectWithoutResponsesInput!]
  create: [AnswerCreateWithoutResponsesInput!]
}

input AnswerCreateOrConnectWithoutQuestionInput {
  create: AnswerCreateWithoutQuestionInput!
  where: AnswerWhereUniqueInput!
}

input AnswerCreateOrConnectWithoutResponsesInput {
  create: AnswerCreateWithoutResponsesInput!
  where: AnswerWhereUniqueInput!
}

input AnswerCreateWithoutQuestionInput {
  id: String
  responses: ResponseCreateNestedManyWithoutAnswersInput
  value: String!
}

input AnswerCreateWithoutResponsesInput {
  id: String
  question: QuestionCreateNestedOneWithoutAnswersInput!
  value: String!
}

input AnswerListRelationFilter {
  every: AnswerWhereInput
  none: AnswerWhereInput
  some: AnswerWhereInput
}

input AnswerScalarWhereInput {
  AND: [AnswerScalarWhereInput!]
  NOT: [AnswerScalarWhereInput!]
  OR: [AnswerScalarWhereInput!]
  id: StringFilter
  questionId: StringFilter
  value: StringFilter
}

input AnswerUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input AnswerUpdateManyWithWhereWithoutQuestionInput {
  data: AnswerUpdateManyMutationInput!
  where: AnswerScalarWhereInput!
}

input AnswerUpdateManyWithWhereWithoutResponsesInput {
  data: AnswerUpdateManyMutationInput!
  where: AnswerScalarWhereInput!
}

input AnswerUpdateManyWithoutQuestionNestedInput {
  connect: [AnswerWhereUniqueInput!]
  connectOrCreate: [AnswerCreateOrConnectWithoutQuestionInput!]
  create: [AnswerCreateWithoutQuestionInput!]
  createMany: AnswerCreateManyQuestionInputEnvelope
  delete: [AnswerWhereUniqueInput!]
  deleteMany: [AnswerScalarWhereInput!]
  disconnect: [AnswerWhereUniqueInput!]
  set: [AnswerWhereUniqueInput!]
  update: [AnswerUpdateWithWhereUniqueWithoutQuestionInput!]
  updateMany: [AnswerUpdateManyWithWhereWithoutQuestionInput!]
  upsert: [AnswerUpsertWithWhereUniqueWithoutQuestionInput!]
}

input AnswerUpdateManyWithoutResponsesNestedInput {
  connect: [AnswerWhereUniqueInput!]
  connectOrCreate: [AnswerCreateOrConnectWithoutResponsesInput!]
  create: [AnswerCreateWithoutResponsesInput!]
  delete: [AnswerWhereUniqueInput!]
  deleteMany: [AnswerScalarWhereInput!]
  disconnect: [AnswerWhereUniqueInput!]
  set: [AnswerWhereUniqueInput!]
  update: [AnswerUpdateWithWhereUniqueWithoutResponsesInput!]
  updateMany: [AnswerUpdateManyWithWhereWithoutResponsesInput!]
  upsert: [AnswerUpsertWithWhereUniqueWithoutResponsesInput!]
}

input AnswerUpdateWithWhereUniqueWithoutQuestionInput {
  data: AnswerUpdateWithoutQuestionInput!
  where: AnswerWhereUniqueInput!
}

input AnswerUpdateWithWhereUniqueWithoutResponsesInput {
  data: AnswerUpdateWithoutResponsesInput!
  where: AnswerWhereUniqueInput!
}

input AnswerUpdateWithoutQuestionInput {
  id: StringFieldUpdateOperationsInput
  responses: ResponseUpdateManyWithoutAnswersNestedInput
  value: StringFieldUpdateOperationsInput
}

input AnswerUpdateWithoutResponsesInput {
  id: StringFieldUpdateOperationsInput
  question: QuestionUpdateOneRequiredWithoutAnswersNestedInput
  value: StringFieldUpdateOperationsInput
}

input AnswerUpsertWithWhereUniqueWithoutQuestionInput {
  create: AnswerCreateWithoutQuestionInput!
  update: AnswerUpdateWithoutQuestionInput!
  where: AnswerWhereUniqueInput!
}

input AnswerUpsertWithWhereUniqueWithoutResponsesInput {
  create: AnswerCreateWithoutResponsesInput!
  update: AnswerUpdateWithoutResponsesInput!
  where: AnswerWhereUniqueInput!
}

input AnswerWhereInput {
  AND: [AnswerWhereInput!]
  NOT: [AnswerWhereInput!]
  OR: [AnswerWhereInput!]
  id: StringFilter
  question: QuestionRelationFilter
  questionId: StringFilter
  responses: ResponseListRelationFilter
  value: StringFilter
}

input AnswerWhereUniqueInput {
  id: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input EnumGradeFieldUpdateOperationsInput {
  set: Grade
}

input EnumGradeFilter {
  equals: Grade
  in: [Grade!]
  not: NestedEnumGradeFilter
  notIn: [Grade!]
}

type Form {
  _count: FormCount!
  id: ID!
  questions: [Question!]
  responses: [Response!]
}

type FormCount {
  questions: Int!
  responses: Int!
}

input FormCreateNestedOneWithoutQuestionsInput {
  connect: FormWhereUniqueInput
  connectOrCreate: FormCreateOrConnectWithoutQuestionsInput
  create: FormCreateWithoutQuestionsInput
}

input FormCreateNestedOneWithoutResponsesInput {
  connect: FormWhereUniqueInput
  connectOrCreate: FormCreateOrConnectWithoutResponsesInput
  create: FormCreateWithoutResponsesInput
}

input FormCreateOrConnectWithoutQuestionsInput {
  create: FormCreateWithoutQuestionsInput!
  where: FormWhereUniqueInput!
}

input FormCreateOrConnectWithoutResponsesInput {
  create: FormCreateWithoutResponsesInput!
  where: FormWhereUniqueInput!
}

input FormCreateWithoutQuestionsInput {
  id: String
  responses: ResponseCreateNestedManyWithoutFormInput
}

input FormCreateWithoutResponsesInput {
  id: String
  questions: QuestionCreateNestedManyWithoutFormInput
}

input FormRelationFilter {
  is: FormWhereInput
  isNot: FormWhereInput
}

input FormUpdateOneRequiredWithoutQuestionsNestedInput {
  connect: FormWhereUniqueInput
  connectOrCreate: FormCreateOrConnectWithoutQuestionsInput
  create: FormCreateWithoutQuestionsInput
  update: FormUpdateWithoutQuestionsInput
  upsert: FormUpsertWithoutQuestionsInput
}

input FormUpdateOneRequiredWithoutResponsesNestedInput {
  connect: FormWhereUniqueInput
  connectOrCreate: FormCreateOrConnectWithoutResponsesInput
  create: FormCreateWithoutResponsesInput
  update: FormUpdateWithoutResponsesInput
  upsert: FormUpsertWithoutResponsesInput
}

input FormUpdateWithoutQuestionsInput {
  id: StringFieldUpdateOperationsInput
  responses: ResponseUpdateManyWithoutFormNestedInput
}

input FormUpdateWithoutResponsesInput {
  id: StringFieldUpdateOperationsInput
  questions: QuestionUpdateManyWithoutFormNestedInput
}

input FormUpsertWithoutQuestionsInput {
  create: FormCreateWithoutQuestionsInput!
  update: FormUpdateWithoutQuestionsInput!
}

input FormUpsertWithoutResponsesInput {
  create: FormCreateWithoutResponsesInput!
  update: FormUpdateWithoutResponsesInput!
}

input FormWhereInput {
  AND: [FormWhereInput!]
  NOT: [FormWhereInput!]
  OR: [FormWhereInput!]
  id: StringFilter
  questions: QuestionListRelationFilter
  responses: ResponseListRelationFilter
}

input FormWhereUniqueInput {
  id: String
}

enum Grade {
  E1
  E2
  E3
  E4
  E5
  E6
  E7
  E8
  E9
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

type Mutation {
  createOrg(createOrgInput: OrgCreateInput!): Org!
  upsertPerson(create: PersonCreateInput!, update: PersonUpdateInput!, where: PersonWhereUniqueInput!): Person!
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedEnumGradeFilter {
  equals: Grade
  in: [Grade!]
  not: NestedEnumGradeFilter
  notIn: [Grade!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Org {
  FDID: String!
  PAS: String!
  _count: OrgCount!
  id: ID!
  name: String!
  users: [Person!]
}

type OrgCount {
  users: Int!
}

input OrgCreateInput {
  FDID: String!
  PAS: String!
  id: String
  name: String!
  users: PersonCreateNestedManyWithoutOrgInput
}

input OrgCreateNestedOneWithoutUsersInput {
  connect: OrgWhereUniqueInput
  connectOrCreate: OrgCreateOrConnectWithoutUsersInput
  create: OrgCreateWithoutUsersInput
}

input OrgCreateOrConnectWithoutUsersInput {
  create: OrgCreateWithoutUsersInput!
  where: OrgWhereUniqueInput!
}

input OrgCreateWithoutUsersInput {
  FDID: String!
  PAS: String!
  id: String
  name: String!
}

input OrgOrderByWithRelationInput {
  FDID: SortOrder
  PAS: SortOrder
  id: SortOrder
  name: SortOrder
  users: PersonOrderByRelationAggregateInput
}

input OrgRelationFilter {
  is: OrgWhereInput
  isNot: OrgWhereInput
}

enum OrgScalarFieldEnum {
  FDID
  PAS
  id
  name
}

input OrgUpdateOneRequiredWithoutUsersNestedInput {
  connect: OrgWhereUniqueInput
  connectOrCreate: OrgCreateOrConnectWithoutUsersInput
  create: OrgCreateWithoutUsersInput
  update: OrgUpdateWithoutUsersInput
  upsert: OrgUpsertWithoutUsersInput
}

input OrgUpdateWithoutUsersInput {
  FDID: StringFieldUpdateOperationsInput
  PAS: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input OrgUpsertWithoutUsersInput {
  create: OrgCreateWithoutUsersInput!
  update: OrgUpdateWithoutUsersInput!
}

input OrgWhereInput {
  AND: [OrgWhereInput!]
  FDID: StringFilter
  NOT: [OrgWhereInput!]
  OR: [OrgWhereInput!]
  PAS: StringFilter
  id: StringFilter
  name: StringFilter
  users: PersonListRelationFilter
}

input OrgWhereUniqueInput {
  id: String
  name: String
}

type Person {
  _count: PersonCount!
  afsc: String!
  email: String
  firstName: String!
  forms: [Response!]
  grade: Grade!
  id: ID!
  lastName: String!
  middleInitial: String
  org: Org!
  orgId: String!
  ssn: Int!
}

type PersonCount {
  forms: Int!
}

input PersonCreateInput {
  afsc: String!
  email: String
  firstName: String!
  forms: ResponseCreateNestedManyWithoutUserInput
  grade: Grade!
  id: String
  lastName: String!
  middleInitial: String
  org: OrgCreateNestedOneWithoutUsersInput!
  ssn: Int!
}

input PersonCreateManyOrgInput {
  afsc: String!
  email: String
  firstName: String!
  grade: Grade!
  id: String
  lastName: String!
  middleInitial: String
  ssn: Int!
}

input PersonCreateManyOrgInputEnvelope {
  data: [PersonCreateManyOrgInput!]!
  skipDuplicates: Boolean
}

input PersonCreateNestedManyWithoutOrgInput {
  connect: [PersonWhereUniqueInput!]
  connectOrCreate: [PersonCreateOrConnectWithoutOrgInput!]
  create: [PersonCreateWithoutOrgInput!]
  createMany: PersonCreateManyOrgInputEnvelope
}

input PersonCreateNestedOneWithoutAddtlRaterInput {
  connect: PersonWhereUniqueInput
  connectOrCreate: PersonCreateOrConnectWithoutAddtlRaterInput
  create: PersonCreateWithoutAddtlRaterInput
}

input PersonCreateNestedOneWithoutCCOfInput {
  connect: PersonWhereUniqueInput
  connectOrCreate: PersonCreateOrConnectWithoutCCOfInput
  create: PersonCreateWithoutCCOfInput
}

input PersonCreateNestedOneWithoutRateeOfInput {
  connect: PersonWhereUniqueInput
  connectOrCreate: PersonCreateOrConnectWithoutRateeOfInput
  create: PersonCreateWithoutRateeOfInput
}

input PersonCreateNestedOneWithoutRaterOfInput {
  connect: PersonWhereUniqueInput
  connectOrCreate: PersonCreateOrConnectWithoutRaterOfInput
  create: PersonCreateWithoutRaterOfInput
}

input PersonCreateOrConnectWithoutAddtlRaterInput {
  create: PersonCreateWithoutAddtlRaterInput!
  where: PersonWhereUniqueInput!
}

input PersonCreateOrConnectWithoutCCOfInput {
  create: PersonCreateWithoutCCOfInput!
  where: PersonWhereUniqueInput!
}

input PersonCreateOrConnectWithoutOrgInput {
  create: PersonCreateWithoutOrgInput!
  where: PersonWhereUniqueInput!
}

input PersonCreateOrConnectWithoutRateeOfInput {
  create: PersonCreateWithoutRateeOfInput!
  where: PersonWhereUniqueInput!
}

input PersonCreateOrConnectWithoutRaterOfInput {
  create: PersonCreateWithoutRaterOfInput!
  where: PersonWhereUniqueInput!
}

input PersonCreateWithoutAddtlRaterInput {
  CCOf: ResponseCreateNestedManyWithoutCCInput
  afsc: String!
  email: String
  firstName: String!
  grade: Grade!
  id: String
  lastName: String!
  middleInitial: String
  org: OrgCreateNestedOneWithoutUsersInput!
  rateeOf: ResponseCreateNestedManyWithoutRateeInput
  raterOf: ResponseCreateNestedManyWithoutRaterInput
  ssn: Int!
}

input PersonCreateWithoutCCOfInput {
  addtlRater: ResponseCreateNestedManyWithoutAddtlRaterInput
  afsc: String!
  email: String
  firstName: String!
  grade: Grade!
  id: String
  lastName: String!
  middleInitial: String
  org: OrgCreateNestedOneWithoutUsersInput!
  rateeOf: ResponseCreateNestedManyWithoutRateeInput
  raterOf: ResponseCreateNestedManyWithoutRaterInput
  ssn: Int!
}

input PersonCreateWithoutOrgInput {
  afsc: String!
  email: String
  firstName: String!
  forms: ResponseCreateNestedManyWithoutUserInput
  grade: Grade!
  id: String
  lastName: String!
  middleInitial: String
  ssn: Int!
}

input PersonCreateWithoutRateeOfInput {
  CCOf: ResponseCreateNestedManyWithoutCCInput
  addtlRater: ResponseCreateNestedManyWithoutAddtlRaterInput
  afsc: String!
  email: String
  firstName: String!
  grade: Grade!
  id: String
  lastName: String!
  middleInitial: String
  org: OrgCreateNestedOneWithoutUsersInput!
  raterOf: ResponseCreateNestedManyWithoutRaterInput
  ssn: Int!
}

input PersonCreateWithoutRaterOfInput {
  CCOf: ResponseCreateNestedManyWithoutCCInput
  addtlRater: ResponseCreateNestedManyWithoutAddtlRaterInput
  afsc: String!
  email: String
  firstName: String!
  grade: Grade!
  id: String
  lastName: String!
  middleInitial: String
  org: OrgCreateNestedOneWithoutUsersInput!
  rateeOf: ResponseCreateNestedManyWithoutRateeInput
  ssn: Int!
}

input PersonListRelationFilter {
  every: PersonWhereInput
  none: PersonWhereInput
  some: PersonWhereInput
}

input PersonOrderByRelationAggregateInput {
  _count: SortOrder
}

input PersonOrderByWithRelationInput {
  afsc: SortOrder
  email: SortOrder
  firstName: SortOrder
  forms: ResponseOrderByRelationAggregateInput
  grade: SortOrder
  id: SortOrder
  lastName: SortOrder
  middleInitial: SortOrder
  org: OrgOrderByWithRelationInput
  orgId: SortOrder
  ssn: SortOrder
}

input PersonRelationFilter {
  is: PersonWhereInput
  isNot: PersonWhereInput
}

enum PersonScalarFieldEnum {
  afsc
  email
  firstName
  grade
  id
  lastName
  middleInitial
  orgId
  ssn
}

input PersonUpdateInput {
  afsc: StringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  forms: ResponseUpdateManyWithoutUserNestedInput
  grade: EnumGradeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  middleInitial: NullableStringFieldUpdateOperationsInput
  org: OrgUpdateOneRequiredWithoutUsersNestedInput
  ssn: IntFieldUpdateOperationsInput
}

input PersonUpdateOneRequiredWithoutRateeOfNestedInput {
  connect: PersonWhereUniqueInput
  connectOrCreate: PersonCreateOrConnectWithoutRateeOfInput
  create: PersonCreateWithoutRateeOfInput
  update: PersonUpdateWithoutRateeOfInput
  upsert: PersonUpsertWithoutRateeOfInput
}

input PersonUpdateOneWithoutAddtlRaterNestedInput {
  connect: PersonWhereUniqueInput
  connectOrCreate: PersonCreateOrConnectWithoutAddtlRaterInput
  create: PersonCreateWithoutAddtlRaterInput
  delete: Boolean
  disconnect: Boolean
  update: PersonUpdateWithoutAddtlRaterInput
  upsert: PersonUpsertWithoutAddtlRaterInput
}

input PersonUpdateOneWithoutCCOfNestedInput {
  connect: PersonWhereUniqueInput
  connectOrCreate: PersonCreateOrConnectWithoutCCOfInput
  create: PersonCreateWithoutCCOfInput
  delete: Boolean
  disconnect: Boolean
  update: PersonUpdateWithoutCCOfInput
  upsert: PersonUpsertWithoutCCOfInput
}

input PersonUpdateOneWithoutRaterOfNestedInput {
  connect: PersonWhereUniqueInput
  connectOrCreate: PersonCreateOrConnectWithoutRaterOfInput
  create: PersonCreateWithoutRaterOfInput
  delete: Boolean
  disconnect: Boolean
  update: PersonUpdateWithoutRaterOfInput
  upsert: PersonUpsertWithoutRaterOfInput
}

input PersonUpdateWithoutAddtlRaterInput {
  CCOf: ResponseUpdateManyWithoutCCNestedInput
  afsc: StringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  grade: EnumGradeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  middleInitial: NullableStringFieldUpdateOperationsInput
  org: OrgUpdateOneRequiredWithoutUsersNestedInput
  rateeOf: ResponseUpdateManyWithoutRateeNestedInput
  raterOf: ResponseUpdateManyWithoutRaterNestedInput
  ssn: IntFieldUpdateOperationsInput
}

input PersonUpdateWithoutCCOfInput {
  addtlRater: ResponseUpdateManyWithoutAddtlRaterNestedInput
  afsc: StringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  grade: EnumGradeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  middleInitial: NullableStringFieldUpdateOperationsInput
  org: OrgUpdateOneRequiredWithoutUsersNestedInput
  rateeOf: ResponseUpdateManyWithoutRateeNestedInput
  raterOf: ResponseUpdateManyWithoutRaterNestedInput
  ssn: IntFieldUpdateOperationsInput
}

input PersonUpdateWithoutRateeOfInput {
  CCOf: ResponseUpdateManyWithoutCCNestedInput
  addtlRater: ResponseUpdateManyWithoutAddtlRaterNestedInput
  afsc: StringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  grade: EnumGradeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  middleInitial: NullableStringFieldUpdateOperationsInput
  org: OrgUpdateOneRequiredWithoutUsersNestedInput
  raterOf: ResponseUpdateManyWithoutRaterNestedInput
  ssn: IntFieldUpdateOperationsInput
}

input PersonUpdateWithoutRaterOfInput {
  CCOf: ResponseUpdateManyWithoutCCNestedInput
  addtlRater: ResponseUpdateManyWithoutAddtlRaterNestedInput
  afsc: StringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  firstName: StringFieldUpdateOperationsInput
  grade: EnumGradeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  lastName: StringFieldUpdateOperationsInput
  middleInitial: NullableStringFieldUpdateOperationsInput
  org: OrgUpdateOneRequiredWithoutUsersNestedInput
  rateeOf: ResponseUpdateManyWithoutRateeNestedInput
  ssn: IntFieldUpdateOperationsInput
}

input PersonUpsertWithoutAddtlRaterInput {
  create: PersonCreateWithoutAddtlRaterInput!
  update: PersonUpdateWithoutAddtlRaterInput!
}

input PersonUpsertWithoutCCOfInput {
  create: PersonCreateWithoutCCOfInput!
  update: PersonUpdateWithoutCCOfInput!
}

input PersonUpsertWithoutRateeOfInput {
  create: PersonCreateWithoutRateeOfInput!
  update: PersonUpdateWithoutRateeOfInput!
}

input PersonUpsertWithoutRaterOfInput {
  create: PersonCreateWithoutRaterOfInput!
  update: PersonUpdateWithoutRaterOfInput!
}

input PersonWhereInput {
  AND: [PersonWhereInput!]
  NOT: [PersonWhereInput!]
  OR: [PersonWhereInput!]
  afsc: StringFilter
  email: StringNullableFilter
  firstName: StringFilter
  forms: ResponseListRelationFilter
  grade: EnumGradeFilter
  id: StringFilter
  lastName: StringFilter
  middleInitial: StringNullableFilter
  org: OrgRelationFilter
  orgId: StringFilter
  ssn: IntFilter
}

input PersonWhereUniqueInput {
  email: String
  id: String
  ssn: Int
}

type Query {
  orgs(cursor: OrgWhereUniqueInput, distinct: [OrgScalarFieldEnum!], orderBy: [OrgOrderByWithRelationInput!], skip: Int, take: Int, where: OrgWhereInput): [Org!]!
  people(cursor: PersonWhereUniqueInput, distinct: [PersonScalarFieldEnum!], orderBy: [PersonOrderByWithRelationInput!], skip: Int, take: Int, where: PersonWhereInput): [Person!]!
  person(where: PersonWhereUniqueInput!): Person!
}

enum QueryMode {
  default
  insensitive
}

type Question {
  _count: QuestionCount!
  answers: [Answer!]
  form: Form!
  formId: String!
  id: ID!
  value: String!
}

type QuestionCount {
  answers: Int!
}

input QuestionCreateManyFormInput {
  id: String
  value: String!
}

input QuestionCreateManyFormInputEnvelope {
  data: [QuestionCreateManyFormInput!]!
  skipDuplicates: Boolean
}

input QuestionCreateNestedManyWithoutFormInput {
  connect: [QuestionWhereUniqueInput!]
  connectOrCreate: [QuestionCreateOrConnectWithoutFormInput!]
  create: [QuestionCreateWithoutFormInput!]
  createMany: QuestionCreateManyFormInputEnvelope
}

input QuestionCreateNestedOneWithoutAnswersInput {
  connect: QuestionWhereUniqueInput
  connectOrCreate: QuestionCreateOrConnectWithoutAnswersInput
  create: QuestionCreateWithoutAnswersInput
}

input QuestionCreateOrConnectWithoutAnswersInput {
  create: QuestionCreateWithoutAnswersInput!
  where: QuestionWhereUniqueInput!
}

input QuestionCreateOrConnectWithoutFormInput {
  create: QuestionCreateWithoutFormInput!
  where: QuestionWhereUniqueInput!
}

input QuestionCreateWithoutAnswersInput {
  form: FormCreateNestedOneWithoutQuestionsInput!
  id: String
  value: String!
}

input QuestionCreateWithoutFormInput {
  answers: AnswerCreateNestedManyWithoutQuestionInput
  id: String
  value: String!
}

input QuestionListRelationFilter {
  every: QuestionWhereInput
  none: QuestionWhereInput
  some: QuestionWhereInput
}

input QuestionRelationFilter {
  is: QuestionWhereInput
  isNot: QuestionWhereInput
}

input QuestionScalarWhereInput {
  AND: [QuestionScalarWhereInput!]
  NOT: [QuestionScalarWhereInput!]
  OR: [QuestionScalarWhereInput!]
  formId: StringFilter
  id: StringFilter
  value: StringFilter
}

input QuestionUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input QuestionUpdateManyWithWhereWithoutFormInput {
  data: QuestionUpdateManyMutationInput!
  where: QuestionScalarWhereInput!
}

input QuestionUpdateManyWithoutFormNestedInput {
  connect: [QuestionWhereUniqueInput!]
  connectOrCreate: [QuestionCreateOrConnectWithoutFormInput!]
  create: [QuestionCreateWithoutFormInput!]
  createMany: QuestionCreateManyFormInputEnvelope
  delete: [QuestionWhereUniqueInput!]
  deleteMany: [QuestionScalarWhereInput!]
  disconnect: [QuestionWhereUniqueInput!]
  set: [QuestionWhereUniqueInput!]
  update: [QuestionUpdateWithWhereUniqueWithoutFormInput!]
  updateMany: [QuestionUpdateManyWithWhereWithoutFormInput!]
  upsert: [QuestionUpsertWithWhereUniqueWithoutFormInput!]
}

input QuestionUpdateOneRequiredWithoutAnswersNestedInput {
  connect: QuestionWhereUniqueInput
  connectOrCreate: QuestionCreateOrConnectWithoutAnswersInput
  create: QuestionCreateWithoutAnswersInput
  update: QuestionUpdateWithoutAnswersInput
  upsert: QuestionUpsertWithoutAnswersInput
}

input QuestionUpdateWithWhereUniqueWithoutFormInput {
  data: QuestionUpdateWithoutFormInput!
  where: QuestionWhereUniqueInput!
}

input QuestionUpdateWithoutAnswersInput {
  form: FormUpdateOneRequiredWithoutQuestionsNestedInput
  id: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input QuestionUpdateWithoutFormInput {
  answers: AnswerUpdateManyWithoutQuestionNestedInput
  id: StringFieldUpdateOperationsInput
  value: StringFieldUpdateOperationsInput
}

input QuestionUpsertWithWhereUniqueWithoutFormInput {
  create: QuestionCreateWithoutFormInput!
  update: QuestionUpdateWithoutFormInput!
  where: QuestionWhereUniqueInput!
}

input QuestionUpsertWithoutAnswersInput {
  create: QuestionCreateWithoutAnswersInput!
  update: QuestionUpdateWithoutAnswersInput!
}

input QuestionWhereInput {
  AND: [QuestionWhereInput!]
  NOT: [QuestionWhereInput!]
  OR: [QuestionWhereInput!]
  answers: AnswerListRelationFilter
  form: FormRelationFilter
  formId: StringFilter
  id: StringFilter
  value: StringFilter
}

input QuestionWhereUniqueInput {
  id: String
}

type Response {
  CC: Person
  CCId: String
  _count: ResponseCount!
  addtlRater: Person
  addtlRaterId: String
  answers: [Answer!]
  begin: DateTime!
  end: DateTime!
  form: Form!
  formId: String!
  id: ID!
  ratee: Person!
  rateeId: String!
  rater: Person
  raterId: String
}

type ResponseCount {
  answers: Int!
}

input ResponseCreateManyAddtlRaterInput {
  CCId: String
  begin: DateTime!
  end: DateTime!
  formId: String!
  id: String
  rateeId: String!
  raterId: String
}

input ResponseCreateManyAddtlRaterInputEnvelope {
  data: [ResponseCreateManyAddtlRaterInput!]!
  skipDuplicates: Boolean
}

input ResponseCreateManyCCInput {
  addtlRaterId: String
  begin: DateTime!
  end: DateTime!
  formId: String!
  id: String
  rateeId: String!
  raterId: String
}

input ResponseCreateManyCCInputEnvelope {
  data: [ResponseCreateManyCCInput!]!
  skipDuplicates: Boolean
}

input ResponseCreateManyFormInput {
  CCId: String
  addtlRaterId: String
  begin: DateTime!
  end: DateTime!
  id: String
  rateeId: String!
  raterId: String
}

input ResponseCreateManyFormInputEnvelope {
  data: [ResponseCreateManyFormInput!]!
  skipDuplicates: Boolean
}

input ResponseCreateManyRateeInput {
  CCId: String
  addtlRaterId: String
  begin: DateTime!
  end: DateTime!
  formId: String!
  id: String
  raterId: String
}

input ResponseCreateManyRateeInputEnvelope {
  data: [ResponseCreateManyRateeInput!]!
  skipDuplicates: Boolean
}

input ResponseCreateManyRaterInput {
  CCId: String
  addtlRaterId: String
  begin: DateTime!
  end: DateTime!
  formId: String!
  id: String
  rateeId: String!
}

input ResponseCreateManyRaterInputEnvelope {
  data: [ResponseCreateManyRaterInput!]!
  skipDuplicates: Boolean
}

input ResponseCreateManyUserInput {
  begin: DateTime!
  end: DateTime!
  formId: String!
  id: String
}

input ResponseCreateManyUserInputEnvelope {
  data: [ResponseCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input ResponseCreateNestedManyWithoutAddtlRaterInput {
  connect: [ResponseWhereUniqueInput!]
  connectOrCreate: [ResponseCreateOrConnectWithoutAddtlRaterInput!]
  create: [ResponseCreateWithoutAddtlRaterInput!]
  createMany: ResponseCreateManyAddtlRaterInputEnvelope
}

input ResponseCreateNestedManyWithoutAnswersInput {
  connect: [ResponseWhereUniqueInput!]
  connectOrCreate: [ResponseCreateOrConnectWithoutAnswersInput!]
  create: [ResponseCreateWithoutAnswersInput!]
}

input ResponseCreateNestedManyWithoutCCInput {
  connect: [ResponseWhereUniqueInput!]
  connectOrCreate: [ResponseCreateOrConnectWithoutCCInput!]
  create: [ResponseCreateWithoutCCInput!]
  createMany: ResponseCreateManyCCInputEnvelope
}

input ResponseCreateNestedManyWithoutFormInput {
  connect: [ResponseWhereUniqueInput!]
  connectOrCreate: [ResponseCreateOrConnectWithoutFormInput!]
  create: [ResponseCreateWithoutFormInput!]
  createMany: ResponseCreateManyFormInputEnvelope
}

input ResponseCreateNestedManyWithoutRateeInput {
  connect: [ResponseWhereUniqueInput!]
  connectOrCreate: [ResponseCreateOrConnectWithoutRateeInput!]
  create: [ResponseCreateWithoutRateeInput!]
  createMany: ResponseCreateManyRateeInputEnvelope
}

input ResponseCreateNestedManyWithoutRaterInput {
  connect: [ResponseWhereUniqueInput!]
  connectOrCreate: [ResponseCreateOrConnectWithoutRaterInput!]
  create: [ResponseCreateWithoutRaterInput!]
  createMany: ResponseCreateManyRaterInputEnvelope
}

input ResponseCreateNestedManyWithoutUserInput {
  connect: [ResponseWhereUniqueInput!]
  connectOrCreate: [ResponseCreateOrConnectWithoutUserInput!]
  create: [ResponseCreateWithoutUserInput!]
  createMany: ResponseCreateManyUserInputEnvelope
}

input ResponseCreateOrConnectWithoutAddtlRaterInput {
  create: ResponseCreateWithoutAddtlRaterInput!
  where: ResponseWhereUniqueInput!
}

input ResponseCreateOrConnectWithoutAnswersInput {
  create: ResponseCreateWithoutAnswersInput!
  where: ResponseWhereUniqueInput!
}

input ResponseCreateOrConnectWithoutCCInput {
  create: ResponseCreateWithoutCCInput!
  where: ResponseWhereUniqueInput!
}

input ResponseCreateOrConnectWithoutFormInput {
  create: ResponseCreateWithoutFormInput!
  where: ResponseWhereUniqueInput!
}

input ResponseCreateOrConnectWithoutRateeInput {
  create: ResponseCreateWithoutRateeInput!
  where: ResponseWhereUniqueInput!
}

input ResponseCreateOrConnectWithoutRaterInput {
  create: ResponseCreateWithoutRaterInput!
  where: ResponseWhereUniqueInput!
}

input ResponseCreateOrConnectWithoutUserInput {
  create: ResponseCreateWithoutUserInput!
  where: ResponseWhereUniqueInput!
}

input ResponseCreateWithoutAddtlRaterInput {
  CC: PersonCreateNestedOneWithoutCCOfInput
  answers: AnswerCreateNestedManyWithoutResponsesInput
  begin: DateTime!
  end: DateTime!
  form: FormCreateNestedOneWithoutResponsesInput!
  id: String
  ratee: PersonCreateNestedOneWithoutRateeOfInput!
  rater: PersonCreateNestedOneWithoutRaterOfInput
}

input ResponseCreateWithoutAnswersInput {
  CC: PersonCreateNestedOneWithoutCCOfInput
  addtlRater: PersonCreateNestedOneWithoutAddtlRaterInput
  begin: DateTime!
  end: DateTime!
  form: FormCreateNestedOneWithoutResponsesInput!
  id: String
  ratee: PersonCreateNestedOneWithoutRateeOfInput!
  rater: PersonCreateNestedOneWithoutRaterOfInput
}

input ResponseCreateWithoutCCInput {
  addtlRater: PersonCreateNestedOneWithoutAddtlRaterInput
  answers: AnswerCreateNestedManyWithoutResponsesInput
  begin: DateTime!
  end: DateTime!
  form: FormCreateNestedOneWithoutResponsesInput!
  id: String
  ratee: PersonCreateNestedOneWithoutRateeOfInput!
  rater: PersonCreateNestedOneWithoutRaterOfInput
}

input ResponseCreateWithoutFormInput {
  CC: PersonCreateNestedOneWithoutCCOfInput
  addtlRater: PersonCreateNestedOneWithoutAddtlRaterInput
  answers: AnswerCreateNestedManyWithoutResponsesInput
  begin: DateTime!
  end: DateTime!
  id: String
  ratee: PersonCreateNestedOneWithoutRateeOfInput!
  rater: PersonCreateNestedOneWithoutRaterOfInput
}

input ResponseCreateWithoutRateeInput {
  CC: PersonCreateNestedOneWithoutCCOfInput
  addtlRater: PersonCreateNestedOneWithoutAddtlRaterInput
  answers: AnswerCreateNestedManyWithoutResponsesInput
  begin: DateTime!
  end: DateTime!
  form: FormCreateNestedOneWithoutResponsesInput!
  id: String
  rater: PersonCreateNestedOneWithoutRaterOfInput
}

input ResponseCreateWithoutRaterInput {
  CC: PersonCreateNestedOneWithoutCCOfInput
  addtlRater: PersonCreateNestedOneWithoutAddtlRaterInput
  answers: AnswerCreateNestedManyWithoutResponsesInput
  begin: DateTime!
  end: DateTime!
  form: FormCreateNestedOneWithoutResponsesInput!
  id: String
  ratee: PersonCreateNestedOneWithoutRateeOfInput!
}

input ResponseCreateWithoutUserInput {
  answers: AnswerCreateNestedManyWithoutResponsesInput
  begin: DateTime!
  end: DateTime!
  form: FormCreateNestedOneWithoutResponsesInput!
  id: String
}

input ResponseListRelationFilter {
  every: ResponseWhereInput
  none: ResponseWhereInput
  some: ResponseWhereInput
}

input ResponseOrderByRelationAggregateInput {
  _count: SortOrder
}

input ResponseScalarWhereInput {
  AND: [ResponseScalarWhereInput!]
  CCId: StringNullableFilter
  NOT: [ResponseScalarWhereInput!]
  OR: [ResponseScalarWhereInput!]
  addtlRaterId: StringNullableFilter
  begin: DateTimeFilter
  end: DateTimeFilter
  formId: StringFilter
  id: StringFilter
  rateeId: StringFilter
  raterId: StringNullableFilter
}

input ResponseUpdateManyMutationInput {
  begin: DateTimeFieldUpdateOperationsInput
  end: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input ResponseUpdateManyWithWhereWithoutAddtlRaterInput {
  data: ResponseUpdateManyMutationInput!
  where: ResponseScalarWhereInput!
}

input ResponseUpdateManyWithWhereWithoutAnswersInput {
  data: ResponseUpdateManyMutationInput!
  where: ResponseScalarWhereInput!
}

input ResponseUpdateManyWithWhereWithoutCCInput {
  data: ResponseUpdateManyMutationInput!
  where: ResponseScalarWhereInput!
}

input ResponseUpdateManyWithWhereWithoutFormInput {
  data: ResponseUpdateManyMutationInput!
  where: ResponseScalarWhereInput!
}

input ResponseUpdateManyWithWhereWithoutRateeInput {
  data: ResponseUpdateManyMutationInput!
  where: ResponseScalarWhereInput!
}

input ResponseUpdateManyWithWhereWithoutRaterInput {
  data: ResponseUpdateManyMutationInput!
  where: ResponseScalarWhereInput!
}

input ResponseUpdateManyWithWhereWithoutUserInput {
  data: ResponseUpdateManyMutationInput!
  where: ResponseScalarWhereInput!
}

input ResponseUpdateManyWithoutAddtlRaterNestedInput {
  connect: [ResponseWhereUniqueInput!]
  connectOrCreate: [ResponseCreateOrConnectWithoutAddtlRaterInput!]
  create: [ResponseCreateWithoutAddtlRaterInput!]
  createMany: ResponseCreateManyAddtlRaterInputEnvelope
  delete: [ResponseWhereUniqueInput!]
  deleteMany: [ResponseScalarWhereInput!]
  disconnect: [ResponseWhereUniqueInput!]
  set: [ResponseWhereUniqueInput!]
  update: [ResponseUpdateWithWhereUniqueWithoutAddtlRaterInput!]
  updateMany: [ResponseUpdateManyWithWhereWithoutAddtlRaterInput!]
  upsert: [ResponseUpsertWithWhereUniqueWithoutAddtlRaterInput!]
}

input ResponseUpdateManyWithoutAnswersNestedInput {
  connect: [ResponseWhereUniqueInput!]
  connectOrCreate: [ResponseCreateOrConnectWithoutAnswersInput!]
  create: [ResponseCreateWithoutAnswersInput!]
  delete: [ResponseWhereUniqueInput!]
  deleteMany: [ResponseScalarWhereInput!]
  disconnect: [ResponseWhereUniqueInput!]
  set: [ResponseWhereUniqueInput!]
  update: [ResponseUpdateWithWhereUniqueWithoutAnswersInput!]
  updateMany: [ResponseUpdateManyWithWhereWithoutAnswersInput!]
  upsert: [ResponseUpsertWithWhereUniqueWithoutAnswersInput!]
}

input ResponseUpdateManyWithoutCCNestedInput {
  connect: [ResponseWhereUniqueInput!]
  connectOrCreate: [ResponseCreateOrConnectWithoutCCInput!]
  create: [ResponseCreateWithoutCCInput!]
  createMany: ResponseCreateManyCCInputEnvelope
  delete: [ResponseWhereUniqueInput!]
  deleteMany: [ResponseScalarWhereInput!]
  disconnect: [ResponseWhereUniqueInput!]
  set: [ResponseWhereUniqueInput!]
  update: [ResponseUpdateWithWhereUniqueWithoutCCInput!]
  updateMany: [ResponseUpdateManyWithWhereWithoutCCInput!]
  upsert: [ResponseUpsertWithWhereUniqueWithoutCCInput!]
}

input ResponseUpdateManyWithoutFormNestedInput {
  connect: [ResponseWhereUniqueInput!]
  connectOrCreate: [ResponseCreateOrConnectWithoutFormInput!]
  create: [ResponseCreateWithoutFormInput!]
  createMany: ResponseCreateManyFormInputEnvelope
  delete: [ResponseWhereUniqueInput!]
  deleteMany: [ResponseScalarWhereInput!]
  disconnect: [ResponseWhereUniqueInput!]
  set: [ResponseWhereUniqueInput!]
  update: [ResponseUpdateWithWhereUniqueWithoutFormInput!]
  updateMany: [ResponseUpdateManyWithWhereWithoutFormInput!]
  upsert: [ResponseUpsertWithWhereUniqueWithoutFormInput!]
}

input ResponseUpdateManyWithoutRateeNestedInput {
  connect: [ResponseWhereUniqueInput!]
  connectOrCreate: [ResponseCreateOrConnectWithoutRateeInput!]
  create: [ResponseCreateWithoutRateeInput!]
  createMany: ResponseCreateManyRateeInputEnvelope
  delete: [ResponseWhereUniqueInput!]
  deleteMany: [ResponseScalarWhereInput!]
  disconnect: [ResponseWhereUniqueInput!]
  set: [ResponseWhereUniqueInput!]
  update: [ResponseUpdateWithWhereUniqueWithoutRateeInput!]
  updateMany: [ResponseUpdateManyWithWhereWithoutRateeInput!]
  upsert: [ResponseUpsertWithWhereUniqueWithoutRateeInput!]
}

input ResponseUpdateManyWithoutRaterNestedInput {
  connect: [ResponseWhereUniqueInput!]
  connectOrCreate: [ResponseCreateOrConnectWithoutRaterInput!]
  create: [ResponseCreateWithoutRaterInput!]
  createMany: ResponseCreateManyRaterInputEnvelope
  delete: [ResponseWhereUniqueInput!]
  deleteMany: [ResponseScalarWhereInput!]
  disconnect: [ResponseWhereUniqueInput!]
  set: [ResponseWhereUniqueInput!]
  update: [ResponseUpdateWithWhereUniqueWithoutRaterInput!]
  updateMany: [ResponseUpdateManyWithWhereWithoutRaterInput!]
  upsert: [ResponseUpsertWithWhereUniqueWithoutRaterInput!]
}

input ResponseUpdateManyWithoutUserNestedInput {
  connect: [ResponseWhereUniqueInput!]
  connectOrCreate: [ResponseCreateOrConnectWithoutUserInput!]
  create: [ResponseCreateWithoutUserInput!]
  createMany: ResponseCreateManyUserInputEnvelope
  delete: [ResponseWhereUniqueInput!]
  deleteMany: [ResponseScalarWhereInput!]
  disconnect: [ResponseWhereUniqueInput!]
  set: [ResponseWhereUniqueInput!]
  update: [ResponseUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ResponseUpdateManyWithWhereWithoutUserInput!]
  upsert: [ResponseUpsertWithWhereUniqueWithoutUserInput!]
}

input ResponseUpdateWithWhereUniqueWithoutAddtlRaterInput {
  data: ResponseUpdateWithoutAddtlRaterInput!
  where: ResponseWhereUniqueInput!
}

input ResponseUpdateWithWhereUniqueWithoutAnswersInput {
  data: ResponseUpdateWithoutAnswersInput!
  where: ResponseWhereUniqueInput!
}

input ResponseUpdateWithWhereUniqueWithoutCCInput {
  data: ResponseUpdateWithoutCCInput!
  where: ResponseWhereUniqueInput!
}

input ResponseUpdateWithWhereUniqueWithoutFormInput {
  data: ResponseUpdateWithoutFormInput!
  where: ResponseWhereUniqueInput!
}

input ResponseUpdateWithWhereUniqueWithoutRateeInput {
  data: ResponseUpdateWithoutRateeInput!
  where: ResponseWhereUniqueInput!
}

input ResponseUpdateWithWhereUniqueWithoutRaterInput {
  data: ResponseUpdateWithoutRaterInput!
  where: ResponseWhereUniqueInput!
}

input ResponseUpdateWithWhereUniqueWithoutUserInput {
  data: ResponseUpdateWithoutUserInput!
  where: ResponseWhereUniqueInput!
}

input ResponseUpdateWithoutAddtlRaterInput {
  CC: PersonUpdateOneWithoutCCOfNestedInput
  answers: AnswerUpdateManyWithoutResponsesNestedInput
  begin: DateTimeFieldUpdateOperationsInput
  end: DateTimeFieldUpdateOperationsInput
  form: FormUpdateOneRequiredWithoutResponsesNestedInput
  id: StringFieldUpdateOperationsInput
  ratee: PersonUpdateOneRequiredWithoutRateeOfNestedInput
  rater: PersonUpdateOneWithoutRaterOfNestedInput
}

input ResponseUpdateWithoutAnswersInput {
  CC: PersonUpdateOneWithoutCCOfNestedInput
  addtlRater: PersonUpdateOneWithoutAddtlRaterNestedInput
  begin: DateTimeFieldUpdateOperationsInput
  end: DateTimeFieldUpdateOperationsInput
  form: FormUpdateOneRequiredWithoutResponsesNestedInput
  id: StringFieldUpdateOperationsInput
  ratee: PersonUpdateOneRequiredWithoutRateeOfNestedInput
  rater: PersonUpdateOneWithoutRaterOfNestedInput
}

input ResponseUpdateWithoutCCInput {
  addtlRater: PersonUpdateOneWithoutAddtlRaterNestedInput
  answers: AnswerUpdateManyWithoutResponsesNestedInput
  begin: DateTimeFieldUpdateOperationsInput
  end: DateTimeFieldUpdateOperationsInput
  form: FormUpdateOneRequiredWithoutResponsesNestedInput
  id: StringFieldUpdateOperationsInput
  ratee: PersonUpdateOneRequiredWithoutRateeOfNestedInput
  rater: PersonUpdateOneWithoutRaterOfNestedInput
}

input ResponseUpdateWithoutFormInput {
  CC: PersonUpdateOneWithoutCCOfNestedInput
  addtlRater: PersonUpdateOneWithoutAddtlRaterNestedInput
  answers: AnswerUpdateManyWithoutResponsesNestedInput
  begin: DateTimeFieldUpdateOperationsInput
  end: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  ratee: PersonUpdateOneRequiredWithoutRateeOfNestedInput
  rater: PersonUpdateOneWithoutRaterOfNestedInput
}

input ResponseUpdateWithoutRateeInput {
  CC: PersonUpdateOneWithoutCCOfNestedInput
  addtlRater: PersonUpdateOneWithoutAddtlRaterNestedInput
  answers: AnswerUpdateManyWithoutResponsesNestedInput
  begin: DateTimeFieldUpdateOperationsInput
  end: DateTimeFieldUpdateOperationsInput
  form: FormUpdateOneRequiredWithoutResponsesNestedInput
  id: StringFieldUpdateOperationsInput
  rater: PersonUpdateOneWithoutRaterOfNestedInput
}

input ResponseUpdateWithoutRaterInput {
  CC: PersonUpdateOneWithoutCCOfNestedInput
  addtlRater: PersonUpdateOneWithoutAddtlRaterNestedInput
  answers: AnswerUpdateManyWithoutResponsesNestedInput
  begin: DateTimeFieldUpdateOperationsInput
  end: DateTimeFieldUpdateOperationsInput
  form: FormUpdateOneRequiredWithoutResponsesNestedInput
  id: StringFieldUpdateOperationsInput
  ratee: PersonUpdateOneRequiredWithoutRateeOfNestedInput
}

input ResponseUpdateWithoutUserInput {
  answers: AnswerUpdateManyWithoutResponsesNestedInput
  begin: DateTimeFieldUpdateOperationsInput
  end: DateTimeFieldUpdateOperationsInput
  form: FormUpdateOneRequiredWithoutResponsesNestedInput
  id: StringFieldUpdateOperationsInput
}

input ResponseUpsertWithWhereUniqueWithoutAddtlRaterInput {
  create: ResponseCreateWithoutAddtlRaterInput!
  update: ResponseUpdateWithoutAddtlRaterInput!
  where: ResponseWhereUniqueInput!
}

input ResponseUpsertWithWhereUniqueWithoutAnswersInput {
  create: ResponseCreateWithoutAnswersInput!
  update: ResponseUpdateWithoutAnswersInput!
  where: ResponseWhereUniqueInput!
}

input ResponseUpsertWithWhereUniqueWithoutCCInput {
  create: ResponseCreateWithoutCCInput!
  update: ResponseUpdateWithoutCCInput!
  where: ResponseWhereUniqueInput!
}

input ResponseUpsertWithWhereUniqueWithoutFormInput {
  create: ResponseCreateWithoutFormInput!
  update: ResponseUpdateWithoutFormInput!
  where: ResponseWhereUniqueInput!
}

input ResponseUpsertWithWhereUniqueWithoutRateeInput {
  create: ResponseCreateWithoutRateeInput!
  update: ResponseUpdateWithoutRateeInput!
  where: ResponseWhereUniqueInput!
}

input ResponseUpsertWithWhereUniqueWithoutRaterInput {
  create: ResponseCreateWithoutRaterInput!
  update: ResponseUpdateWithoutRaterInput!
  where: ResponseWhereUniqueInput!
}

input ResponseUpsertWithWhereUniqueWithoutUserInput {
  create: ResponseCreateWithoutUserInput!
  update: ResponseUpdateWithoutUserInput!
  where: ResponseWhereUniqueInput!
}

input ResponseWhereInput {
  AND: [ResponseWhereInput!]
  CC: PersonRelationFilter
  CCId: StringNullableFilter
  NOT: [ResponseWhereInput!]
  OR: [ResponseWhereInput!]
  addtlRater: PersonRelationFilter
  addtlRaterId: StringNullableFilter
  answers: AnswerListRelationFilter
  begin: DateTimeFilter
  end: DateTimeFilter
  form: FormRelationFilter
  formId: StringFilter
  id: StringFilter
  ratee: PersonRelationFilter
  rateeId: StringFilter
  rater: PersonRelationFilter
  raterId: StringNullableFilter
}

input ResponseWhereUniqueInput {
  id: String
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}